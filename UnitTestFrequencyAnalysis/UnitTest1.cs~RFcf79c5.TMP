using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using FrequencyAnalysis;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;
using System.IO;

namespace UnitTestFrequencyAnalysis
{
    [TestClass]
    public class UnitTest1
    {
        public const string ExceptionMessage = "Please insert text file"; 

        [TestMethod]
        public void TestFrequencyAnalysisMethod()
        {
           
            string txtResult = "The quick brown fox jumped over the lazy dog";
 
            txtResult = Regex.Replace(txtResult, @"\s", "");
             
            Dictionary<char, int> expected = txtResult.GroupBy(c => c).ToDictionary(grp => grp.Key, grp => grp.Count());

            expected = (from entry in expected orderby entry.Value descending, Convert.ToByte(entry.Key) descending select entry).Take(10).ToDictionary(pair => pair.Key, pair => pair.Value);

            Dictionary<char, int> actual = FrequencyAnalysis.FrequencyAnalysis.FrequencyAnalyse(txtResult);

            CollectionAssert.AreEquivalent(expected.ToList(), actual.ToList());

            txtResult = txtResult.ToLower();

            expected = txtResult.GroupBy(c => c).ToDictionary(grp => grp.Key, grp => grp.Count());

            expected = (from entry in expected orderby entry.Value descending, Convert.ToByte(entry.Key) descending select entry).Take(10).ToDictionary(pair => pair.Key, pair => pair.Value);

            actual = FrequencyAnalysis.FrequencyAnalysis.FrequencyAnalyse(txtResult);

            CollectionAssert.AreEquivalent(expected.ToList(), actual.ToList());

        }

        [TestMethod]
        [ExpectedException(typeof(FileNotFoundException), "[textfile is not in directory]")]
        public void TestReadTextFile()
        {
            ConsoleKeyInfo keyPress = new ConsoleKeyInfo('Y', ConsoleKey.Y, false, false, false);

            string txtResult = FrequencyAnalysis.FrequencyAnalysis.ReadTextFile("Sample3.txt", keyPress);

        }

        [TestMethod]
        //[ExpectedException(typeof(IndexOutOfRangeException), "Please insert text file")]
        public void TestCheckFileNameFormat()
        {
            string[] args = { };

            try
            {
                FrequencyAnalysis.FrequencyAnalysis.CheckFileNameFormat(args);
            }
            catch (IndexOutOfRangeException)
            {
                // assert  
                StringAssert.Contains("Please insert text file", ExceptionMessage);
                return;
            }
            Assert.Fail("No exception was thrown.");  
        }
        [TestMethod]
        public void TestCheckFileNameFormat2()
        {
            string[] args = {"test.dll"};

            try
            {
                FrequencyAnalysis.FrequencyAnalysis.CheckFileNameFormat(args);
            }
            catch (IndexOutOfRangeException)
            {
                // assert  
                StringAssert.Contains("Please insert text file", ExceptionMessage);
                return;
            }
            Assert.Fail("No exception was thrown.");
        }


    }
}
